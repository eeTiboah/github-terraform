
name: "Terraform action"

on: 
  push:
  workflow_dispatch:
    inputs:
      environment:
        description: "Deploy to production"
        required: true
        default: prod
      
permissions:
      id-token: write 
      contents: read 
      # pull-requests: write
env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
jobs:
  Checkout-and-Setup-Terraform:
    runs-on: ubuntu-latest
    env:
      environment: dev
     
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ACTIONS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.5

  Terraform-Dev-Plan:
    needs: [Checkout-and-Setup-Terraform]
    runs-on: ubuntu-latest
    env:
      environment: dev
     
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ACTIONS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
       

      - name: Terraform Init
        id: init
        run: terraform init
       

      - name: Terraform Validate
        id: validate
        run: terraform validate 
       

      - name: Terraform Plan
        id: plan
        run: 
          terraform plan 
       
        continue-on-error: false
 

  Terraform-Dev-Apply:
    # if: github.event.inputs.environment == 'dev'
    needs: [ Terraform-Dev-Plan]
    runs-on: ubuntu-latest
    env:
      environment: dev
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ACTIONS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          terraform init
          terraform workspace select ${{env.environment}} || terraform workspace new ${{env.environment}}
          terraform apply -auto-approve -input=false
          
       
  Terraform-Prod-Apply:
    if: github.event.inputs.environment == 'prod'
    needs: [ Terraform-Dev-Plan]
    runs-on: ubuntu-latest
    env:
      environment: prod
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ACTIONS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' 
        run: |
          terraform init
          terraform workspace select ${{env.environment}} || terraform workspace new ${{env.environment}}
          terraform apply -auto-approve -input=false
       


